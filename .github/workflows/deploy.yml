name: Docker website CI

on:
  push: 
    branches: ['api-chida']
    paths:
      - 'src/**'

jobs:
  deploy:
    name: Docker build and deploy to Azure Container Instances
    runs-on: ubuntu-latest

    steps: 
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set Firebase credentials
        run: |
          echo '${{ secrets.CLAVE_FIREBASE }}' > firebase.json
      
      - name: Set .env file
        run: |
          echo "${{ secrets.ENV_VALUE }}" > .env
      

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Ajusta la versión de Node.js si es necesario

      - name: Install dependencies
        run: |
          npm install  # Asegúrate de tener un package.json con las dependencias necesarias
          npm install -g jest  # Instalar Jest globalmente

      - name: Run tests
        run: |
          npm test  # Esto ejecuta las pruebas de tu proyecto, usa el comando adecuado si es diferente
        continue-on-error: false  # Detiene el flujo si las pruebas fallan

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/notificaciones:latest -f Dockerfile .

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Push image to ACR
        run: |
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/notificaciones:latest

      - name: Deploy to Azure Container Instances
        uses: Azure/aci-deploy@v1
        with:
          resource-group: topicos-notificaciones
          dns-name-label: recordatorioschida-${{ github.run_id }}
          image: ${{ secrets.ACR_LOGIN_SERVER }}/notificaciones:latest
          registry-login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          registry-username: ${{ secrets.ACR_USERNAME }}
          registry-password: ${{ secrets.ACR_PASSWORD }}
          name: recordatorioschida
          location: 'East US'
          ports: '3000'
          restart-policy: OnFailure

      - name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: push to Docker Hub
        run: |
          docker tag ${{ secrets.ACR_LOGIN_SERVER }}/notificaciones:latest ${{ secrets.DOCKERHUB_USERNAME }}/notificaciones:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/notificaciones:latest
